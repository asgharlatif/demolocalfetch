[{"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\index.js":"1","D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\App.js":"2"},{"size":1237,"mtime":1610586043215,"results":"3","hashOfConfig":"4"},{"size":798,"mtime":1610588517435,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d4cdej",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\index.js",[],"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\App.js",["10"],{"ruleId":"11","severity":1,"message":"12","line":17,"column":17,"nodeType":"13","endLine":17,"endColumn":38},"react-hooks/exhaustive-deps","Assignments to the 'data1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression"]