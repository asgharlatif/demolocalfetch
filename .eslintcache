[{"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\index.js":"1","D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\App.js":"2","D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\reportWebVitals.js":"3","D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\Lfc.js":"4"},{"size":669,"mtime":1610657340729,"results":"5","hashOfConfig":"6"},{"size":1439,"mtime":1611016232592,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609529045911,"results":"8","hashOfConfig":"6"},{"size":1075,"mtime":1610657590064,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d4cdej",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\index.js",[],"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\App.js",["18","19"],"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\reportWebVitals.js",[],"D:\\Development\\Data\\bootcamp2020\\demo-local-fetch\\src\\Lfc.js",[],{"ruleId":"20","severity":1,"message":"21","line":9,"column":18,"nodeType":"22","messageId":"23","endLine":9,"endColumn":25},{"ruleId":"24","severity":1,"message":"25","line":19,"column":17,"nodeType":"26","endLine":19,"endColumn":38},"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'data1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression"]